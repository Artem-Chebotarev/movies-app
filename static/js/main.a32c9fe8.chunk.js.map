{"version":3,"sources":["components/MoviesList/MoviesList.module.css","components/Header/Header.module.css","components/Loader/Loader.module.css","components/MovieItem/MovieItem.module.css","types/movies.ts","redux/reducers/moviesReducer/moviesReducer.ts","constants/constants.ts","redux/reducers/rootReducer/rootReducer.ts","redux/store.ts","assets/bin.svg","assets/liked.svg","assets/unliked.svg","components/Header/Header.tsx","config/config.ts","API/MoviesService.ts","utils/addFavouriteStatus.ts","redux/actionCreators/moviesAC.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/Loader/Loader.tsx","utils/getMovieTitle.ts","components/MovieItem/MovieItem.tsx","components/MoviesContainer/MoviesContainer.tsx","components/MoviesList/MoviesList.tsx","pages/Home.tsx","App.tsx","index.tsx","components/MoviesContainer/MoviesContainer.module.css"],"names":["module","exports","MoviesActionEnum","BUTTON_TEXT","initStateUsers","movies","favouriteMovies","isLoading","error","rootReducer","combineReducers","state","action","type","FETCH_MOVIES","FETCH_MOVIES_SUCCESS","payload","FETCH_MOVIES_ERROR","CHANGE_FAVOURITE_STATUS","id","newMovies","map","elem","isFavourite","newFavouriteMovies","filter","REMOVE_MOVIE","currentId","filteredMovies","filteredFavouriteMovies","store","createStore","composeWithDevTools","applyMiddleware","thunk","NO_MOVIES","ICON_BIN","icon","Bin","title","ICON_LIKED","Liked","ICON_UNLIKED","Unliked","Header","className","styles","header","SITE_URL","process","MoviesService","fetch","response","responseFromServer","json","addFavouriteStatus","fetchMovies","dispatch","a","getAll","setTimeout","moviesWithFavouriteStatus","results","changeFavouriteStatus","removeMovie","useActions","useDispatch","bindActionCreators","useTypedSelector","useSelector","Loader","loader","getMovieTitle","item","name","MovieItem","movie","poster","src","poster_path","alt","movieInfo","iconsContainer","favourite","onClick","MoviesContainer","useState","isFavouriteMovies","setIsFavouriteMovies","length","button","SHOW_ALL_MOVIES","SHOW_FAVOURITES_MOVIES","renderButton","moviesContainer","renderAllMovies","renderFavouriteMovies","MoviesList","useEffect","container","loadingContainer","renderLoader","renderError","Home","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a32c9fe8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingContainer\":\"MoviesList_loadingContainer__3Mp1F\",\"container\":\"MoviesList_container__1HSxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\",\"rotate\":\"Loader_rotate__2CUi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"MovieItem_movie__9A26v\",\"poster\":\"MovieItem_poster__2rSKo\",\"movieInfo\":\"MovieItem_movieInfo__2U8Kg\",\"iconsContainer\":\"MovieItem_iconsContainer__zjtnR\",\"favourite\":\"MovieItem_favourite__2wEuO\",\"icon\":\"MovieItem_icon__2bvZ6\"};","export interface IMovie {\n  id: number;\n  title?: string;\n  name?: string;\n  poster_path: string;\n  isFavourite?: boolean;\n}\n\nexport interface MoviesState {\n  movies: IMovie[];\n  isLoading: boolean;\n  error: string | null;\n  favouriteMovies: IMovie[];\n}\n\nexport enum MoviesActionEnum {\n  FETCH_MOVIES = 'FETCH_MOVIES',\n  FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS',\n  FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR',\n  CHANGE_FAVOURITE_STATUS = 'CHANGE_FAVOURITE_STATUS',\n  REMOVE_MOVIE = 'REMOVE_MOVIE',\n}\n\nexport interface FetchMoviesAction {\n  type: MoviesActionEnum.FETCH_MOVIES;\n}\n\nexport interface FetchSuccessAction {\n  type: MoviesActionEnum.FETCH_MOVIES_SUCCESS;\n  payload: IMovie[];\n}\n\nexport interface FetchErrorAction {\n  type: MoviesActionEnum.FETCH_MOVIES_ERROR;\n  payload: string;\n}\n\nexport interface ChangeFavouriteStatusAction {\n  type: MoviesActionEnum.CHANGE_FAVOURITE_STATUS;\n  payload: number;\n}\n\nexport interface RemoveMovieAction {\n  type: MoviesActionEnum.REMOVE_MOVIE;\n  payload: number;\n}\n\nexport type MoviesAction =\n  | FetchMoviesAction\n  | FetchSuccessAction\n  | FetchErrorAction\n  | ChangeFavouriteStatusAction\n  | RemoveMovieAction;\n","import {MoviesActionEnum, MoviesAction, MoviesState} from '../../../types/movies';\n\nconst initStateUsers: MoviesState = {\n  movies: [],\n  favouriteMovies: [],\n  isLoading: false,\n  error: '',\n};\n\nexport const moviesReducer = (state = initStateUsers, action: MoviesAction): MoviesState => {\n  const movies = state.movies;\n\n  const favouriteMovies = state.favouriteMovies;\n\n  switch (action.type) {\n    case MoviesActionEnum.FETCH_MOVIES:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n        movies: [],\n        favouriteMovies: [],\n      };\n\n    case MoviesActionEnum.FETCH_MOVIES_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        movies: action.payload,\n        favouriteMovies: [],\n      };\n\n    case MoviesActionEnum.FETCH_MOVIES_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n        movies: [],\n        favouriteMovies: [],\n      };\n\n    case MoviesActionEnum.CHANGE_FAVOURITE_STATUS:\n      const id = action.payload;\n\n      const newMovies = movies.map((elem) => {\n        if (elem.id === id) {\n          elem = {...elem, isFavourite: !elem.isFavourite};\n        }\n\n        return elem;\n      });\n\n      const newFavouriteMovies = newMovies.filter((elem) => elem.isFavourite);\n\n      return {\n        ...state,\n        movies: newMovies,\n        favouriteMovies: newFavouriteMovies,\n      };\n\n    case MoviesActionEnum.REMOVE_MOVIE:\n      const currentId = action.payload;\n\n      const filteredMovies = movies.filter((elem) => elem.id !== currentId);\n\n      const filteredFavouriteMovies = favouriteMovies.filter((elem) => elem.id !== currentId);\n\n      return {\n        ...state,\n        movies: filteredMovies,\n        favouriteMovies: filteredFavouriteMovies,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {IconType} from '../types/icons';\nimport {Bin, Liked, Unliked} from '../assets';\n\nexport const HEADER_TEXT = 'Popular movies';\n\nexport const ERROR = 'An error occurred while downloading movies';\n\nexport const NO_MOVIES = 'The list of movies is empty';\n\nexport enum BUTTON_TEXT {\n  SHOW_FAVOURITES_MOVIES = 'Show favourite movies',\n  SHOW_ALL_MOVIES = 'Show all movies',\n}\n\nexport const ICON_BIN: IconType = {\n  icon: Bin,\n  title: 'Bin',\n};\nexport const ICON_LIKED: IconType = {\n  icon: Liked,\n  title: 'Like',\n};\nexport const ICON_UNLIKED: IconType = {\n  icon: Unliked,\n  title: 'Like',\n};\n","import {combineReducers} from 'redux';\nimport {moviesReducer} from '../moviesReducer/moviesReducer';\n\nexport const rootReducer = combineReducers({\n  movies: moviesReducer,\n});\n","import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './reducers/rootReducer/rootReducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","export default __webpack_public_path__ + \"static/media/bin.23b38d28.svg\";","export default __webpack_public_path__ + \"static/media/liked.5af0b174.svg\";","export default __webpack_public_path__ + \"static/media/unliked.dd77469e.svg\";","import {FC} from 'react';\nimport {HEADER_TEXT} from '../../constants/constants';\n\nimport styles from './Header.module.css';\n\nexport const Header: FC = () => {\n  return <header className={styles.header}>{HEADER_TEXT}</header>;\n};\n","// base API url\nexport const SITE_URL = `https://api.themoviedb.org/3/trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`;\n\n// image size for tmdb\nexport const IMG_300 = 'https://image.tmdb.org/t/p/w300';\n\n// image unavalable\nexport const IMG_UNAVALABLE = 'https://www.movienewz.com/img/films/poster-holder.jpg';\n","import {SITE_URL} from '../config/config';\nimport {IResponse} from '../types/api';\n\nexport default class MoviesService {\n  static async getAll(): Promise<IResponse> {\n    const response = await fetch(SITE_URL);\n\n    const responseFromServer = response.json();\n\n    return responseFromServer;\n  }\n}\n","import {IMovie} from '../types/movies';\n\nexport const addFavouriteStatus = (elem: IMovie) => {\n  return {\n    ...elem,\n    isFavourite: false,\n  };\n};\n","import {Dispatch} from 'react';\nimport MoviesService from '../../API/MoviesService';\nimport {ERROR} from '../../constants/constants';\nimport {MoviesActionEnum, MoviesAction} from '../../types/movies';\nimport {addFavouriteStatus} from '../../utils/addFavouriteStatus';\n\nexport const fetchMovies = () => {\n  return async (dispatch: Dispatch<MoviesAction>) => {\n    try {\n      dispatch({type: MoviesActionEnum.FETCH_MOVIES});\n      const response = await MoviesService.getAll();\n\n      // setTimeout сделан для того, чтобы показать loader\n      setTimeout(() => {\n        // добавление поля isFavourite объектам прихедшим с api\n        const moviesWithFavouriteStatus = response.results.map((elem) => addFavouriteStatus(elem));\n\n        dispatch({\n          type: MoviesActionEnum.FETCH_MOVIES_SUCCESS,\n          payload: moviesWithFavouriteStatus,\n        });\n      }, 1500);\n    } catch (error) {\n      dispatch({\n        type: MoviesActionEnum.FETCH_MOVIES_ERROR,\n        payload: ERROR,\n      });\n    }\n  };\n};\n\nexport const changeFavouriteStatus = (id: number): MoviesAction => {\n  return {\n    type: MoviesActionEnum.CHANGE_FAVOURITE_STATUS,\n    payload: id,\n  };\n};\n\nexport const removeMovie = (id: number): MoviesAction => {\n  return {\n    type: MoviesActionEnum.REMOVE_MOVIE,\n    payload: id,\n  };\n};\n","import {useDispatch} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {AppDispatch} from '../redux/store';\nimport {fetchMovies, changeFavouriteStatus, removeMovie} from '../redux/actionCreators/moviesAC';\n\nexport const useActions = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  return bindActionCreators(\n    {\n      fetchMovies,\n      changeFavouriteStatus,\n      removeMovie,\n    },\n    dispatch\n  );\n};\n","import {TypedUseSelectorHook, useSelector} from 'react-redux';\nimport {RootState} from '../redux/store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {FC} from 'react';\n\nimport styles from './Loader.module.css';\n\nexport const Loader: FC = () => {\n  return <div className={styles.loader}></div>;\n};\n","import {IMovie} from '../types/movies';\n\nexport const getMovieTitle = (item: IMovie) => {\n  return item.title ? item.title : item.name;\n};\n","import {FC} from 'react';\nimport {IMG_300, IMG_UNAVALABLE} from '../../config/config';\nimport {ICON_BIN, ICON_LIKED, ICON_UNLIKED} from '../../constants/constants';\nimport {useActions} from '../../hooks/useActions';\nimport {IMovie} from '../../types/movies';\nimport {getMovieTitle} from '../../utils/getMovieTitle';\n\nimport styles from './MovieItem.module.css';\n\ninterface MovieItemProps {\n  item: IMovie;\n}\n\nexport const MovieItem: FC<MovieItemProps> = ({item}) => {\n  const {changeFavouriteStatus, removeMovie} = useActions();\n\n  const handleClickFavourite = (id: number) => {\n    changeFavouriteStatus(id);\n  };\n\n  const handleClickBin = (id: number) => {\n    removeMovie(id);\n  };\n\n  const renderIcons = () => {\n    return (\n      <div className={styles.iconsContainer}>\n        <div className={styles.favourite}>\n          <img\n            className={styles.icon}\n            onClick={() => handleClickFavourite(item.id)}\n            src={item.isFavourite ? ICON_LIKED.icon : ICON_UNLIKED.icon}\n            alt={ICON_LIKED.title}\n          />\n        </div>\n        <div className={styles.favourite}>\n          <img\n            className={styles.icon}\n            onClick={() => handleClickBin(item.id)}\n            src={ICON_BIN.icon}\n            alt={ICON_BIN.title}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.movie}>\n      <img\n        className={styles.poster}\n        src={item.poster_path ? `${IMG_300}${item.poster_path}` : IMG_UNAVALABLE}\n        alt={getMovieTitle(item)}\n      />\n      <div className={styles.movieInfo}>\n        <h4>{getMovieTitle(item)}</h4>\n        {renderIcons()}\n      </div>\n    </div>\n  );\n};\n","import {FC, useState} from 'react';\nimport {BUTTON_TEXT, NO_MOVIES} from '../../constants/constants';\nimport {useTypedSelector} from '../../hooks/useTypedSelector';\nimport {IMovie} from '../../types/movies';\n\nimport {MovieItem} from '../MovieItem/MovieItem';\n\nimport styles from './MoviesContainer.module.css';\n\nexport const MoviesContainer: FC = () => {\n  const [isFavouriteMovies, setIsFavouriteMovies] = useState<boolean>(false);\n\n  const {movies, favouriteMovies} = useTypedSelector((state) => state.movies);\n\n  const handleClickButton = () => {\n    setIsFavouriteMovies(!isFavouriteMovies);\n  };\n\n  const renderButton = (movies: IMovie[]) => {\n    return (\n      movies.length > 0 && (\n        <button className={styles.button} onClick={() => handleClickButton()}>\n          {!isFavouriteMovies ? BUTTON_TEXT.SHOW_FAVOURITES_MOVIES : BUTTON_TEXT.SHOW_ALL_MOVIES}\n        </button>\n      )\n    );\n  };\n\n  const renderAllMovies = (isFavouriteMovies: boolean, movies: IMovie[], NO_MOVIES: string) => {\n    return (\n      !isFavouriteMovies && (\n        <div className={styles.moviesContainer}>\n          {movies.length ? movies.map((elem) => <MovieItem key={elem.id} item={elem} />) : <h1>{NO_MOVIES}</h1>}\n        </div>\n      )\n    );\n  };\n\n  const renderFavouriteMovies = (isFavouriteMovies: boolean, favouriteMovies: IMovie[], NO_MOVIES: string) => {\n    return (\n      isFavouriteMovies && (\n        <div className={styles.moviesContainer}>\n          {favouriteMovies.length ? (\n            favouriteMovies.map((elem) => <MovieItem key={elem.id} item={elem} />)\n          ) : (\n            <h1>{NO_MOVIES}</h1>\n          )}\n        </div>\n      )\n    );\n  };\n\n  return (\n    <>\n      {renderButton(movies)}\n\n      {renderAllMovies(isFavouriteMovies, movies, NO_MOVIES)}\n\n      {renderFavouriteMovies(isFavouriteMovies, favouriteMovies, NO_MOVIES)}\n    </>\n  );\n};\n","import {FC, useEffect} from 'react';\nimport {useActions} from '../../hooks/useActions';\nimport {useTypedSelector} from '../../hooks/useTypedSelector';\n\nimport {Loader} from '../Loader/Loader';\nimport {MoviesContainer} from '../MoviesContainer/MoviesContainer';\n\nimport styles from './MoviesList.module.css';\n\nexport const MoviesList: FC = () => {\n  const {error, isLoading} = useTypedSelector((state) => state.movies);\n\n  const {fetchMovies} = useActions();\n\n  const renderLoader = (isLoading: boolean) => {\n    return (\n      isLoading && (\n        <div className={styles.loadingContainer}>\n          <Loader />\n        </div>\n      )\n    );\n  };\n\n  const renderError = (error: string | null) => {\n    return error && <h1>{error}</h1>;\n  };\n\n  useEffect(() => {\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      {renderLoader(isLoading)}\n\n      {renderError(error)}\n\n      <MoviesContainer />\n    </div>\n  );\n};\n","import {FC} from 'react';\nimport {Header} from '../components/Header/Header';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\n\nexport const Home: FC = () => {\n  return (\n    <>\n      <Header />\n      <MoviesList />\n    </>\n  );\n};\n","import {FC} from 'react';\n\nimport {Home} from './pages/Home';\n\nexport const App: FC = () => {\n  return <Home />;\n};\n","import ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nimport {App} from './App';\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesContainer\":\"MoviesContainer_moviesContainer__beaGg\",\"button\":\"MoviesContainer_button__3Cc-a\"};"],"sourceRoot":""}